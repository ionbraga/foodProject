{"version":3,"file":"bundle.js","mappings":";;;;;;;;;AAAA;AACA;AACA;AACA,yEAAyE;AACzE;AACA,0CAA0C;AAC1C;AACA,uCAAuC;AACvC,4CAA4C;AAC5C,MAAM;AACN,yBAAyB;AACzB,gDAAgD;AAChD;AACA;AACA;AACA,yCAAyC;AACzC;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA,yDAAyD;AACzD,+DAA+D;AAC/D;AACA;AACA,iDAAiD;AACjD,2EAA2E;AAC3E,kDAAkD;AAClD;AACA;AACA,qFAAqF;AACrF;AACA;AACA,SAAS;AACT;AACA;AACA,0EAA0E;AAC1E;AACA;AACA;AACA,4BAA4B;AAC5B,6DAA6D;AAC7D,yCAAyC;AACzC,qBAAqB;AACrB;AACA;AACA,gCAAgC;AAChC,+GAA+G;AAC/G,UAAU;AACV,gHAAgH;AAChH;AACA;AACA;AACA;AACA;AACA,4DAA4D;AAC5D,+DAA+D;AAC/D;AACA;AACA,qDAAqD;AACrD,2DAA2D;AAC3D,mEAAmE;AACnE,0FAA0F;AAC1F,kBAAkB;AAClB,wDAAwD;AACxD,+EAA+E;AAC/E;AACA;AACA,4CAA4C;AAC5C,yDAAyD;AACzD,iBAAiB;AACjB;AACA,sDAAsD;AACtD;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,gDAAgD;AAChD,yDAAyD;AACzD;AACA,iDAAiD;AACjD;AACA,4CAA4C;AAC5C,uDAAuD;AACvD,cAAc;AACd,8CAA8C;AAC9C;AACA;AACA,gDAAgD;AAChD;AACA,4CAA4C;AAC5C;AACA;AACA,4CAA4C;AAC5C;AACA;AACA,yCAAyC;AACzC;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;ACpHA;AACA;AACA;AACA;AACA,sBAAsB;AACtB,kFAAkF;AAClF,6BAA6B;AAC7B;AACA;AACA;AACA;AACA,qCAAqC;AACrC,mEAAmE;AACnE,iCAAiC;AACjC,iCAAiC;AACjC;AACA;AACA,yBAAyB;AACzB,uDAAuD;AACvD;AACA;AACA,oBAAoB;AACpB,4DAA4D;AAC5D;AACA,8CAA8C;AAC9C;AACA;AACA,cAAc;AACd,sFAAsF;AACtF;AACA;AACA;AACA;AACA,2BAA2B,UAAU,MAAM,SAAS;AACpD,kDAAkD,WAAW;AAC7D,gDAAgD,WAAW;AAC3D;AACA;AACA;AACA,0DAA0D,WAAW;AACrE;AACA;AACA,0CAA0C;AAC1C;AACA;AACA;AACA;AACA,gDAAgD;AAChD,uCAAuC;AACvC;AACA,wBAAwB;AACxB,+CAA+C,IAAI,YAAY,WAAW,KAAK;AAC/E;AACA;AACA,kCAAkC;AAClC;AACA;AACA;AACA,yBAAyB;AACzB,2BAA2B,iCAAiC;AAC5D,8FAA8F;AAC9F,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA,mCAAmC,iCAAiC;AACpE,iGAAiG;AACjG,gBAAgB;AAChB,YAAY;AACZ;AACA;AACA;AACA;;;;;;;;;;ACzEA;AACA;AACA;AACA,sDAAsD;AACtD;AACA,uBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA,KAAK;AACL;AACA,6CAA6C;AAC7C,wCAAwC;AACxC;AACA,wBAAwB;AACxB;AACA,aAAa;AACb;AACA,SAAS,IAAI;AACb,kCAAkC;AAClC;AACA;AACA,mCAAmC;AACnC,kDAAkD;AAClD,iCAAiC;AACjC;AACA,kEAAkE;AAClE,kDAAkD;AAClD;AACA;AACA;AACA,gBAAgB;AAChB,mEAAmE;AACnE;AACA,kDAAkD;AAClD;AACA,kFAAkF;AAClF;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B,mCAAmC;AACnC,mDAAmD;AACnD,yCAAyC;AACzC,aAAa;AACb,mDAAmD;AACnD,aAAa;AACb;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,yCAAyC;AACzC,2EAA2E;AAC3E;AACA,gDAAgD;AAChD,sBAAsB;AACtB;AACA,4DAA4D;AAC5D,qDAAqD;AACrD;AACA;AACA;AACA,4CAA4C,QAAQ;AACpD;AACA,YAAY;AACZ;AACA,+DAA+D;AAC/D,4BAA4B;AAC5B,mCAAmC;AACnC,oDAAoD;AACpD,uDAAuD;AACvD,2BAA2B;AAC3B,SAAS;AACT;AACA;AACA;AACA;;;;;;;;;;ACnFA;AACA;AACA;AACA;AACA,mDAAmD;AACnD;AACA;AACA;AACA,oCAAoC;AACpC,uCAAuC;AACvC,gDAAgD;AAChD,oCAAoC;AACpC;AACA;AACA;AACA,oCAAoC;AACpC,uCAAuC;AACvC,yCAAyC;AACzC;AACA;AACA;AACA,iCAAiC;AACjC;AACA,GAAG;AACH;AACA;AACA,4CAA4C;AAC5C,6EAA6E;AAC7E,wBAAwB;AACxB;AACA,GAAG;AACH;AACA,iDAAiD;AACjD,qEAAqE;AACrE,yBAAyB;AACzB;AACA,GAAG;AACH;AACA;AACA,sDAAsD;AACtD;AACA,kCAAkC;AAClC,qHAAqH;AACrH;AACA,oEAAoE;AACpE;AACA;AACA;AACA,yDAAyD;AACzD;AACA;AACA;AACA;;;;;;;;;;ACpDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+DAA+D;AAC/D;AACA,uBAAuB;AACvB,mBAAmB;AACnB;AACA;AACA,4BAA4B;AAC5B,8BAA8B,cAAc;AAC5C,gCAAgC,WAAW;AAC3C,IAAI;AACJ,0CAA0C;AAC1C;AACA;AACA;AACA,wDAAwD;AACxD;AACA;AACA;AACA,4CAA4C;AAC5C;AACA;AACA,kCAAkC;AAClC,GAAG;AACH;AACA,uCAAuC;AACvC;AACA;AACA,oBAAoB;AACpB,oDAAoD;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN,8BAA8B;AAC9B;AACA,iBAAiB,mBAAmB,QAAQ;AAC5C,iDAAiD;AACjD,iDAAiD;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC;AAClC;AACA,+BAA+B;AAC/B,uBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oEAAoE;AACpE;AACA,QAAQ;AACR,6CAA6C;AAC7C;AACA;AACA,mDAAmD,OAAO,OAAO;AACjE;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA,oCAAoC,WAAW;AAC/C,QAAQ;AACR;AACA;AACA;AACA,sDAAsD;AACtD,+CAA+C;AAC/C,GAAG;AACH;AACA;AACA,yBAAyB;AACzB;AACA,QAAQ;AACR,6CAA6C;AAC7C;AACA;AACA,mDAAmD,OAAO,OAAO;AACjE;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA,oCAAoC,WAAW;AAC/C,QAAQ;AACR;AACA;AACA;AACA,sDAAsD;AACtD,+CAA+C;AAC/C,GAAG;AACH;AACA;AACA,8CAA8C;AAC9C,mEAAmE;AACnE;AACA,iCAAiC;AACjC,4DAA4D;AAC5D;AACA,uDAAuD,OAAO,OAAO;AACrE,0DAA0D;AAC1D,mDAAmD;AACnD;AACA;AACA,wCAAwC,WAAW;AACnD,YAAY;AACZ;AACA;AACA,OAAO;AACP,GAAG;AACH;AACA;AACA;;;;;;;;;;ACzJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;;;;;;;;;;ACzCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,IAAI;AAC3B,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;UCjEA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;;;;;ACtBA;AACA;AACA,iBAAiB,mBAAO,CAAC,4CAAgB;AACzC,kBAAkB,mBAAO,CAAC,8CAAiB;AAC3C,kBAAkB,mBAAO,CAAC,8CAAiB;AAC3C,kBAAkB,mBAAO,CAAC,8CAAiB;AAC3C,mBAAmB,mBAAO,CAAC,gDAAkB;AAC7C,iBAAiB,mBAAO,CAAC,4CAAgB;AACzC,kBAAkB,mBAAO,CAAC,8CAAiB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC","sources":["webpack://foodproject/./js/modules/calc.js","webpack://foodproject/./js/modules/cards.js","webpack://foodproject/./js/modules/forms.js","webpack://foodproject/./js/modules/modal.js","webpack://foodproject/./js/modules/slider.js","webpack://foodproject/./js/modules/tabs.js","webpack://foodproject/./js/modules/timer.js","webpack://foodproject/webpack/bootstrap","webpack://foodproject/./js/script.js"],"sourcesContent":["function calc() {\r\n    //Calculator\r\n\r\n    const result = document.querySelector('.calculating__result span');  //primim resultatul final\r\n\r\n    let sex, height, weight, age, ratio;  //cream variabilele de care avem nevoie\r\n\r\n    if(localStorage.getItem('sex')) {  //daca in local storage avem deja setata cheia sex\r\n        sex = localStorage.getItem('sex');  //in document selectam sexul din localStorage\r\n    } else {\r\n        sex = 'female';  //setam sexul manual\r\n        localStorage.setItem('sex', 'female');  //il punem in localStorage\r\n    }\r\n\r\n    \r\n    if(localStorage.getItem('ratio')) {  //cu ratio la fel ca la sex\r\n        ratio = localStorage.getItem('ratio');\r\n    } else {\r\n        ratio = 1.375;\r\n        localStorage.setItem('ratio', 1.375);\r\n    }\r\n\r\n\r\n    function initLocalSettings(selector, activeClass) {  //cream functia care va utiliza datele din local storage\r\n        const elements = document.querySelectorAll(selector);  //primim selectorul indicat ca argument\r\n\r\n        elements.forEach(elem => {\r\n            elem.classList.remove(activeClass);  //remove la clasul activ\r\n            if(elem.getAttribute('id') === localStorage.getItem('sex')) {  //verificam daca avem id si daca e il luam din local storage\r\n                elem.classList.add(activeClass);  //adaugam clasul active\r\n            }\r\n\r\n            if(elem.getAttribute('data-ratio') === localStorage.getItem('ratio')) {  //la ratio la fel\r\n                elem.classList.add(activeClass);\r\n            }\r\n        });\r\n    }\r\n\r\n    initLocalSettings('#gender div', 'calculating__choose-item_active');  //initiem functia initLocalSettings cu argument gender pentru sex siclasul activ\r\n    initLocalSettings('.calculating__choose_big div', 'calculating__choose-item_active');\r\n\r\n\r\n    function calcTotal() {  //cream functia care calculeaza totalul\r\n        if (!sex || !height || !weight || !age || !ratio) {  //daca niciunul din campuri nu vor fi completate \r\n            result.textContent = '___';  //punem **** in locul la resultatul total\r\n            return;  //in cazul in care mai sus avem false, oprim functia\r\n        }\r\n\r\n        if(sex === 'female') {  //daca sex este femeie\r\n            result.textContent = Math.round((447.6 + (9.2 * weight) + (3.1 * height) - (4.3 * age)) * ratio);  //in result calculam dupa formula\r\n        } else {\r\n            result.textContent = Math.round((88.36 + (13.4 * weight) + (4.8 * height) - (5.7 * age)) * ratio);  //in result calculam dupa formula\r\n        }\r\n    }\r\n    \r\n    calcTotal();\r\n\r\n    function getStaticInformation(selector, activeClass) {  //primim informatia si dam ca argument functia de mai jos\r\n        const elements = document.querySelectorAll(selector);  //primim toate div-urile\r\n\r\n        elements.forEach(elem => {\r\n            elem.addEventListener('click', (e) => {  //la argumentul parent selector ii adaugam event click\r\n                if(e.target.getAttribute('data-ratio')) {  //verificam daca obiectul evenimentului are data-ratio\r\n                    ratio = +e.target.getAttribute('data-ratio');  //primim de la e.target si o bagam in ratio \r\n                    localStorage.setItem('ratio', +e.target.getAttribute('data-ratio'));  //memoram in local storage data-ration\r\n                } else {\r\n                    sex = e.target.getAttribute('id');  //primim atributul id \r\n                    localStorage.setItem('sex', e.target.getAttribute('id'));  //memoram in local storage sexul\r\n                }\r\n    \r\n                elements.forEach(elem => {  //cautare forEach\r\n                    elem.classList.remove(activeClass);  //eliminam clasul active\r\n                });\r\n    \r\n                e.target.classList.add(activeClass);  //adaugam active\r\n    \r\n                calcTotal();\r\n            });\r\n        });\r\n    }\r\n\r\n    getStaticInformation('#gender div', 'calculating__choose-item_active');\r\n    getStaticInformation('.calculating__choose_big div', 'calculating__choose-item_active');\r\n\r\n    function getDynamicInformation(selector) {  //cream functia care va primi datele din inpututi\r\n        const input = document.querySelector(selector);  //primim din document elementul dat ca argument in functie\r\n\r\n        input.addEventListener('input', () => {  //adaugam evenimentul input la input\r\n\r\n            if(input.value.match(/\\D/g)) {  //folosind expresii regulate verificam daca inputul contine valori non numerice\r\n                input.style.border = '1px solid red';  //daca contine valori non numerice vom atribui inputului contur rosu\r\n            } else {\r\n                input.style.border = 'none';  //daca nu, nui atribuim contur\r\n            }\r\n\r\n            switch(input.getAttribute('id')) {  //folosim constructia switch,case si verificam dupa id \r\n                case 'height':\r\n                    height = +input.value;  //inscrim in variabila height valoarea inscrisa in inputul cu id height\r\n                    break;\r\n                case 'weight':\r\n                    weight = +input.value;  //inscrim in variabila weight valoarea inscrisa in inputul cu id weight\r\n                    break;\r\n                case 'age':\r\n                    age = +input.value;  //inscrim in variabila age valoarea inscrisa in inputul cu id age\r\n                    break;\r\n            }\r\n            \r\n            calcTotal();\r\n        });\r\n    }\r\n\r\n    getDynamicInformation('#height');\r\n    getDynamicInformation('#weight');\r\n    getDynamicInformation('#age');\r\n}\r\n\r\nmodule.exports = calc;","function cards() {\r\n    \r\n    // Class for Cards\r\n\r\n    class MenuCard {  //cream clasul\r\n        constructor(src, alt, title, descr, price, parentSelector, ...classes) {  //cream constructorul iar ca argumente dam compenentele cardurilor\r\n            this.src = src;  //scriem argumentele ca valori\r\n            this.alt = alt;\r\n            this.title = title;\r\n            this.descr = descr;\r\n            this.price = price;\r\n            this.classes = classes;  //rest operator\r\n            this.parent = document.querySelector(parentSelector);  //DOM element \r\n            this.transfer = 27;  //curs valuta static ca exemplu\r\n            this.changeToUAH();  //aici vom chema metoda changeToUAH\r\n        }\r\n\r\n        changeToUAH() {  //metoda pentru a schimba din dolari in grivne\r\n            this.price = +this.price * this.transfer;  //pentru a afla valoarea in grivne\r\n        }\r\n\r\n        render() {  //cream aspectul siteului (верстка)\r\n            const element = document.createElement('div');  //cream un div nou iar mai jos ii atribuim o structura noua de elemente \r\n\r\n            if (this.classes.length === 0) {  //daca nu a fost dat niciun argument classes\r\n                this.element = 'menu__item'; \r\n                element.classList.add(this.element)  //atunci adaugam valoarea default\r\n            } else {\r\n                this.classes.forEach(className => element.classList.add(className));  //verificam pseudomasivul format si adaugam clasele din pseudomasiv direct pe element\r\n            }\r\n\r\n\r\n            element.innerHTML = `  \r\n                <img src=${this.src} alt=${this.alt}>  \r\n                <h3 class=\"menu__item-subtitle\">${this.title}</h3>\r\n                <div class=\"menu__item-descr\">${this.descr}</div>\r\n                <div class=\"menu__item-divider\"></div>\r\n                <div class=\"menu__item-price\">\r\n                    <div class=\"menu__item-cost\">Цена:</div>\r\n                    <div class=\"menu__item-total\"><span>${this.price}</span> грн/день</div>\r\n                </div>\r\n            `;\r\n            this.parent.append(element);  //punem DOM elementul in noul div \r\n        }\r\n    }\r\n\r\n\r\n    const getResource = async (url, data) => {  //(async)codul asincron din functie va fi transformat in sincron\r\n        const res = await fetch(url);  //In res punem promisul ce vine de la fetch\r\n\r\n        if (!res.ok) {  //daca res nu este ok\r\n            throw new Error(`Could not fetch ${url}, status: ${res.status}`);  //Aruncam o noua eroare\r\n        }\r\n\r\n        return await res.json();  //transforma raspunsul in json\r\n    };\r\n\r\n    getResource('http://localhost:3000/menu') \r\n        .then(data => {  //datele vin de pe server\r\n            data.forEach(({img, altimg, title, descr, price}) => {\r\n                new MenuCard(img, altimg, title, descr, price, '.menu .container').render();  //acest metod se va repeta de atatea ori cate obiecte vor fi in masiv\r\n            });\r\n        }); \r\n    \r\n    // axios.get('http://localhost:3000/menu') \r\n    //     .then(data => {\r\n    //         data.data.forEach(({img, altimg, title, descr, price}) => {\r\n    //             new MenuCard(img, altimg, title, descr, price, '.menu .container').render();  //acest metod se va repeta de atatea ori cate obiecte vor fi in masiv\r\n    //         });\r\n    //     });\r\n\r\n}\r\n\r\nmodule.exports = cards;","function forms() {\r\n    // Forms\r\n    \r\n    const forms = document.querySelectorAll('form');  //In variabila forms primim formele din html\r\n\r\n    const message = {  //Cream un obiect cu raspunsuri diferite in caz de diferite response status\r\n        loading: 'img/form/spinner.svg',\r\n        success: 'Multumim! Va contactam in curand',\r\n        failure: 'Ceva nu merge bine...'\r\n    };\r\n\r\n    forms.forEach(item => {  //Legam de fiecare forma functia postData\r\n        bindOostData(item);\r\n    });\r\n\r\n    const postData = async (url, data) => {  //(async)codul asincron din functie va fi transformat in sincron\r\n        const res = await fetch(url, {  //(avait), se foloseste cu async, js intelege ca codul ce urmeaza va fi sincron\r\n            method: \"POST\",  //Indicam metoda\r\n            headers: {  //Indicam titlurile\r\n                'Content-type': 'application/json'\r\n            },\r\n            body: data\r\n        });  //In res punem promisul ce vine de la fetch\r\n        return await res.json();  //transforma raspunsul in json\r\n    };\r\n\r\n    function bindOostData(form) {  //Cream functia ce raspunde pentru postarea datelor, va primi in sine o forma  \r\n        form.addEventListener('submit', (e) => {  //De fiecare data cand trimitem ceva date in forma  (e este obiectul evemnimentului)\r\n            e.preventDefault();  //Pentru a anula comportamentul standart al browserului\r\n\r\n            const statusMessage = document.createElement('img');  //Vom crea elementul img statusMessage\r\n            statusMessage.src = message.loading;  //Ii adaugam atributul src \r\n            statusMessage.style.cssText = `\r\n                display: block;\r\n                margin: 0 auto;\r\n            `;  //Am adaugat stiluri la status message\r\n            form.insertAdjacentElement('afterend', statusMessage); //folosim o comanda care va pune dupa forma status message\r\n\r\n            const formData = new FormData(form);  //Cream obiectul formData care si transmitem ca argument forma care se transmite ca argument in postData\r\n\r\n            const json = JSON.stringify(Object.fromEntries(formData.entries()));  //transformă obiectul formData într-un șir JSON pentru a-l putea utiliza ulterior pentru a trimite date către server sau pentru a fi stocat în altă parte sub formă de date JSON.\r\n\r\n\r\n\r\n\r\n            postData('http://localhost:3000/requests', json)\r\n            .then(data => {  //Folosim promisurile\r\n                console.log(data); //Aratam la consola ceea ce ne returneaza serverul\r\n                showThanksModal(message.success);  //chemam functia ShowThanksModal si trimitem mesajul success in forma\r\n                statusMessage.remove();  //eliminam blocul status message de pe pagina\r\n            }).catch(() => {\r\n                showThanksModal(message.failure);  //daca ceva nu a mers bine transmitem failure prin functia showThanksModal\r\n            }).finally(() => {\r\n                form.reset();\r\n            });\r\n        });\r\n    }\r\n\r\n    function showThanksModal(message) {  //Cream functia ce va raspunde de aratarea unu mesaj de multumire\r\n        const prevModalDialog = document.querySelector('.modal__dialog');  //Primim clasul modal__dialog\r\n\r\n        prevModalDialog.classList.add('hide');  //Ii adaugam clasul hide care il va ascunde de pe pag\r\n        openModal();  //Cand se ascunde prevModalDialog se porneste functia openModal\r\n\r\n        const thanksModal = document.createElement('div');  //Cream un element div si il punem in variabila thanksModal\r\n        thanksModal.classList.add('modal__dialog');  //Ii adaugam clasul modal__dialog\r\n        thanksModal.innerHTML = `  \r\n            <div class=\"modal__content\">\r\n                <div class=\"modal__close\" data-close>×</div>\r\n                <div class=\"modal__title\">${message}</div>\r\n            </div>\r\n        `;  //Adaugam content in blocul pe care l-am creat\r\n        \r\n        document.querySelector('.modal').append(thanksModal);  //Primim fereastra modal si folosim append care adauga textul \r\n        setTimeout(() => {  //Cream un setTimeout care va functiona dupa 4 sec\r\n            thanksModal.remove();  //ascundem thanksModal pentru a intoarce inapoi prevModalDialog\r\n            prevModalDialog.classList.add('show');  //aratam\r\n            prevModalDialog.classList.remove('hide');  //ascundem\r\n            closeModal();  //inchidem fereastra modal\r\n        }, 4000);\r\n    }\r\n}\r\n\r\nmodule.exports = forms;","function modal() {\r\n        //MODAL\r\n\r\n        const modalTrigger = document.querySelectorAll('[data-modal]'),  //primim buttoanele de aratare a ferestrei modal\r\n        modal = document.querySelector('.modal');  //primim fereastra modal\r\n\r\n\r\n  function openModal() {\r\n      modal.classList.add('show');  //se adauga show la fereastra modal \r\n      modal.classList.remove('hide');  //se scoade hide \r\n      document.body.style.overflow = 'hidden';  //nu putem face scroll\r\n      clearInterval(modalTimerId);  //daca utilizatorul a privit singur deja fereastra modal atunci anulam pornirea automata\r\n  }\r\n\r\n  function closeModal() {\r\n      modal.classList.add('hide');  //se adauga hide la fereastra modal \r\n      modal.classList.remove('show');  //se scoade show\r\n      document.body.style.overflow = ''; //pornim inapoi scrollul\r\n  }\r\n\r\n\r\n  modalTrigger.forEach(btn => {  //pentru a lucra cu pseudomasivul modalTrigger\r\n      btn.addEventListener('click', openModal);\r\n  });\r\n\r\n\r\n  modal.addEventListener('click', (e) => {  //evenimentul click pe modal si folosim obiectul evenimentului - \"e\"\r\n      if(e.target === modal || e.target.getAttribute('data-close') == '') {  //daca locul unde tasteaza utilizatorul este egal cu modal, adica nu pe modal-dialog\r\n         closeModal();  //chemam functia closeModal\r\n      }\r\n  });\r\n\r\n  document.addEventListener('keydown', (e) => {  //tastarea de la tastatura\r\n      if(e.code === 'Escape' && modal.classList.contains('show')) {  //daca e(obiectul evenimentului) este egala cu tasta escape(daca noi am tastat esc) si daca fereastra modal este desschisa\r\n          closeModal();  //chemam functia closeModal\r\n      }\r\n  });\r\n\r\n\r\n  const modalTimerId = setTimeout(openModal, 10000);  //setam intervalul de timp dupa care sa apara fereastra modal\r\n\r\n  function showModalByScroll() {  //cream functia ce va arata fereastra modal dupa ce ajungem la sfarsitul paginii\r\n      if(window.pageYOffset + document.documentElement.clientHeight >= document.documentElement.scrollHeight - 1) {  //daca distanța de la partea de sus a viewport-ului până la partea de jos a viewport-ului este egala cu înălțimea totală a întregului document\r\n          openModal(); \r\n          window.removeEventListener('scroll', showModalByScroll);  //dupa ce a fost deschisa prima data fereastra modal, se sterge eventListenerul ce a deschis fereastra\r\n      }\r\n  }\r\n\r\n  window.addEventListener('scroll', showModalByScroll);  //adaugam eveniment odata ce am ajut la sfarsit de pag\r\n\r\n}\r\n\r\nmodule.exports = modal;","function slider() {\r\n        //Slider\r\n\r\n        const slides = document.querySelectorAll('.offer__slide'),  //primim sliderurile\r\n        slider = document.querySelector('.offer__slider'),\r\n        prev = document.querySelector('.offer__slider-prev'),  //primim arrow prev apoi next\r\n        next = document.querySelector('.offer__slider-next'),\r\n        total = document.querySelector('#total'),\r\n        current = document.querySelector('#current'),\r\n        slidesWrapper = document.querySelector('.offer__slider-wrapper'),\r\n        slidesField = document.querySelector('.offer__slider-inner'),\r\n        width = window.getComputedStyle(slidesWrapper).width;  //returnează valoarea calculată pentru proprietatea width a elementului slidesWrapper\r\n  \r\n  let slideIndex = 1;  //index ce va arata pozitia actuala a sliderului\r\n  let offset = 0;  //orientir sa vedem cu cat sa mutam cu ajutorul transform\r\n\r\n  \r\n  if(slides.length < 10) {  //daca avem mai putin de 10 slideuri adaugam un 0 in fata\r\n      total.textContent = `0${slides.length}`;\r\n      current.textContent = `0${slideIndex}`;\r\n  } else {\r\n      total.textContent = slides.length;  //daca nu, adaugam numarul actual al sliderului\r\n      current.textContent = slideIndex;\r\n  }\r\n\r\n  slidesField.style.width = 100 * slides.length + '%';  //setam latimea blocului\r\n  slidesField.style.display = 'flex';\r\n  slidesField.style.transition = '0.5s all';\r\n\r\n  slidesWrapper.style.overflow = 'hidden';  //ascundem toate elementele ce nu apar in zona de vizibilitate\r\n\r\n  slides.forEach(slide => {\r\n      slide.style.width = width;  //cu forEach trecem prin toate sliderurile si le setam aceeasi latime la toate\r\n  });\r\n\r\n  slider.style.position = 'relative';  //ii dam pozitie relativa la slider\r\n\r\n  const indicators = document.createElement('ol'),  //cream un element nou ol list\r\n        dots = [];  //cream array \r\n  indicators.classList.add('corousel-indicators');  //ii dam un clas nou \r\n  indicators.style.cssText = `\r\n      position: absolute;\r\n      right: 0;\r\n      bottom: 0;\r\n      left: 0;\r\n      z-index: 15;\r\n      display: flex;\r\n      justify-content: center;\r\n      margin-right: 15%;\r\n      margin-left: 15%;\r\n      list-style: none;\r\n  `;  //ii adaugam stilurile prin interpolare la bloc\r\n  slider.append(indicators);  //postam elementul in slider\r\n\r\n  for(let i = 0; i < slides.length; i++) {  //printr-un for cream punctele care vor fi dupa numarul de slideuri\r\n      const dot = document.createElement('li');  //cream anume elemente li\r\n      dot.setAttribute('data-slide-to', i + 1);  //fiecarui punct ii atribuim data-slide-to si adaugam numerarea\r\n      dot.style = `\r\n          box-sizing: content-box;\r\n          flex: 0 1 auto;\r\n          width: 30px;\r\n          height: 6px;\r\n          margin-right: 3px;\r\n          margin-left: 3px;\r\n          cursor: pointer;\r\n          background-color: #fff;\r\n          background-clip: padding-box;\r\n          border-top: 10px solid transparent;\r\n          border-bottom: 10px solid transparent;\r\n          opacity: .5;\r\n          transition: opacity .6s ease;\r\n      `;\r\n      if(i == 0) {\r\n          dot.style.opacity = 1;  //modificam opacity la punctul activ\r\n      }\r\n      indicators.append(dot);  //postam punctele in indicators\r\n      dots.push(dot);  //cand se creaza punctele le bagam in arr\r\n  };\r\n\r\n  function deleteNotDigits(str) {\r\n      return+str.replace(/\\D/g, '');\r\n  }\r\n\r\n  next.addEventListener('click', () => {\r\n      if(offset == deleteNotDigits(width) * (slides.length - 1)) {  //intai avem un string, apoi il convertim in number si ii taiem px\r\n          offset = 0;\r\n      } else {\r\n          offset += deleteNotDigits(width);  //\r\n      }\r\n\r\n      slidesField.style.transform = `translateX(-${offset}px)`;  //mutam pe x slideul cat ne spune offsetul\r\n\r\n      if(slideIndex == slides.length) {\r\n          slideIndex = 1;\r\n      } else {\r\n          slideIndex++;\r\n      }\r\n\r\n      if(slides.length < 10) {\r\n          current.textContent = `0${slideIndex}`;\r\n      } else { \r\n          current.textContent = slideIndex;\r\n      }\r\n\r\n      dots.forEach(dot => dot.style.opacity = '.5');  //initial fiecarui punct ii dam inline style opacity 0.5\r\n      dots[slideIndex - 1].style.opacity = 1;  //scadem indexul la dots si ii dam opacity la 1 \r\n  });\r\n\r\n  prev.addEventListener('click', () => {\r\n      if(offset == 0) {  //intai avem un string, apoi il convertim in number si ii taiem px\r\n          offset = deleteNotDigits(width) * (slides.length - 1) //intai avem un string, apoi il convertim in number si ii taiem px\r\n      } else {\r\n          offset -= deleteNotDigits(width);  //\r\n      }\r\n\r\n      slidesField.style.transform = `translateX(-${offset}px)`;  //mutam pe x slideul cat ne spune offsetul\r\n\r\n      if(slideIndex == 1) {\r\n          slideIndex = slides.length;\r\n      } else {\r\n          slideIndex--;\r\n      }\r\n\r\n      if(slides.length < 10) {\r\n          current.textContent = `0${slideIndex}`;\r\n      } else { \r\n          current.textContent = slideIndex;\r\n      }\r\n\r\n      dots.forEach(dot => dot.style.opacity = '.5');  //initial fiecarui punct ii dam inline style opacity 0.5\r\n      dots[slideIndex - 1].style.opacity = 1;  //scadem indexul la dots si ii dam opacity la 1 \r\n  });\r\n\r\n  dots.forEach(dot => {\r\n      dot.addEventListener('click', (e) => {  //adaugam evenimentul click la puncte si folosim obiectul evenimentului\r\n          const slideTo = e.target.getAttribute('data-slide-to');  //primim valoarea obiectului e dupa click\r\n\r\n          slideIndex = slideTo;  //cand tastam un punct schimbam indexul la slideIndex\r\n          offset = deleteNotDigits(width) * (slideTo - 1);  //calculam offsetul\r\n\r\n          slidesField.style.transform = `translateX(-${offset}px)`;  //mutam pe x slideul cat ne spune offsetul\r\n          dots.forEach(dot => dot.style.opacity = '.5');  //initial fiecarui punct ii dam inline style opacity 0.5\r\n          dots[slideIndex - 1].style.opacity = 1;  //scadem indexul la dots si ii dam opacity la 1 \r\n\r\n          if(slides.length < 10) {\r\n              current.textContent = `0${slideIndex}`;\r\n          } else { \r\n              current.textContent = slideIndex;\r\n          }\r\n      });\r\n  });\r\n}\r\n\r\nmodule.exports = slider;","function tabs() {\r\n        // TABS\r\n    \r\n\tlet tabs = document.querySelectorAll('.tabheader__item'),\r\n    tabsContent = document.querySelectorAll('.tabcontent'),\r\n    tabsParent = document.querySelector('.tabheader__items');\r\n\r\n    function hideTabContent() { \r\n    \r\n    tabsContent.forEach(item => {\r\n        item.classList.add('hide');\r\n        item.classList.remove('show', 'fade');\r\n    });\r\n\r\n    tabs.forEach(item => {\r\n        item.classList.remove('tabheader__item_active');\r\n    });\r\n    }\r\n\r\n    function showTabContent(i = 0) {  \r\n        tabsContent[i].classList.add('show', 'fade');\r\n        tabsContent[i].classList.remove('hide');\r\n        tabs[i].classList.add('tabheader__item_active');\r\n    }\r\n\r\n    hideTabContent();\r\n    showTabContent();\r\n\r\n    tabsParent.addEventListener('click', function(event) { \r\n        const target = event.target;\r\n        if(target && target.classList.contains('tabheader__item')) {\r\n            tabs.forEach((item, i) => {\r\n                if (target == item) {\r\n                    hideTabContent();\r\n                    showTabContent(i);\r\n                }\r\n            });\r\n        }\r\n    });\r\n}\r\n\r\nmodule.exports = tabs; ","function timer() {\r\n    // TIMER\r\n\r\n    const deadline = '2024-06-17';\r\n\r\n    function getTimeRemaining(endtime) {\r\n        let days, hours, minutes, seconds;\r\n        const t = Date.parse(endtime) - Date.parse(new Date());\r\n\r\n        if(t <= 0) {\r\n            days = 0;\r\n            hours = 0;\r\n            minutes = 0;\r\n            seconds = 0;\r\n        } else {\r\n              days = Math.floor(t / (1000 * 60 * 60 * 24)),\r\n              hours = Math.floor((t / (1000 * 60 * 60)) % 24),\r\n              minutes = Math.floor((t / 1000 / 60) % 60),\r\n              seconds = Math.floor((t / 1000) % 60);\r\n        }\r\n        \r\n        return {\r\n            'total': t,\r\n            'days': days,\r\n            'hours': hours,\r\n            'minutes': minutes,\r\n            'seconds': seconds\r\n        };\r\n    };\r\n\r\n    function getZero(num) {\r\n        if(num >= 0 && num < 10){\r\n            return `0${num}`;\r\n        } else {\r\n            return num;\r\n        }\r\n    }\r\n\r\n    function setClock(selector, endtime) {\r\n        const timer = document.querySelector(selector),\r\n              days = timer.querySelector('#days'),\r\n              hours = timer.querySelector('#hours'),\r\n              minutes = timer.querySelector('#minutes'),\r\n              seconds = timer.querySelector('#seconds'),\r\n              timeInterval = setInterval(updateClock, 1000);\r\n\r\n        updateClock();\r\n        \r\n        function updateClock() {\r\n            const t = getTimeRemaining(endtime);\r\n\r\n            days.innerHTML = getZero(t.days),\r\n            hours.innerHTML = getZero(t.hours);\r\n            minutes.innerHTML = getZero(t.minutes);\r\n            seconds.innerHTML = getZero(t.seconds);\r\n\r\n            if(t.total <= 0) {\r\n                clearInterval(timeInterval);\r\n            }\r\n        }\r\n    };\r\n\r\n    setClock('.timer',deadline);\r\n}\r\n\r\nmodule.exports = timer;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","window.addEventListener('DOMContentLoaded', () => {\r\n\r\n    const tabs = require('./modules/tabs'),\r\n          cards = require('./modules/cards'),\r\n          forms = require('./modules/forms'),\r\n          modal = require('./modules/modal'),\r\n          slider = require('./modules/slider'),\r\n          calc = require('./modules/calc'),\r\n          timer = require('./modules/timer');\r\n\r\n    tabs();\r\n    calc();\r\n    cards();\r\n    forms();\r\n    modal();\r\n    slider();\r\n    timer();\r\n}); \r\n"],"names":[],"sourceRoot":""}