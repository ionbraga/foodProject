{"version":3,"file":"bundle.js","mappings":"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","sources":["webpack://foodproject/./js/modules/modal.js","webpack://foodproject/./js/script.js","webpack://foodproject/./js/modules/tabs.js","webpack://foodproject/./js/modules/calc.js","webpack://foodproject/./js/modules/cards.js","webpack://foodproject/./js/services/services.js","webpack://foodproject/./js/modules/forms.js","webpack://foodproject/./js/modules/slider.js","webpack://foodproject/./js/modules/timer.js"],"sourcesContent":["\r\nfunction openModal(modalSelector, modalTimerId) {  //cand functia se cheama ea va lucra cu selectorul \r\n    const modal = document.querySelector(modalSelector);  //primim fereastra modal\r\n    modal.classList.add('show');  //se adauga show la fereastra modal \r\n    modal.classList.remove('hide');  //se scoade hide \r\n    document.body.style.overflow = 'hidden';  //nu putem face scroll\r\n    console.log(modalTimerId);\r\n    if(modalTimerId) {\r\n        clearInterval(modalTimerId);  //daca utilizatorul a privit singur deja fereastra modal atunci anulam pornirea automata\r\n    }\r\n    \r\n}\r\n\r\nfunction closeModal(modalSelector) {\r\n    const modal = document.querySelector(modalSelector);  //primim fereastra modal\r\n    modal.classList.add('hide');  //se adauga hide la fereastra modal \r\n    modal.classList.remove('show');  //se scoade show\r\n    document.body.style.overflow = ''; //pornim inapoi scrollul\r\n}\r\n\r\n\r\nfunction modal(triggerSelector, modalSelector, modalTimerId) {\r\n        const modalTrigger = document.querySelectorAll(triggerSelector),  //primim buttoanele de aratare a ferestrei modal\r\n        modal = document.querySelector(modalSelector);  //primim fereastra modal\r\n\r\n\r\n  modalTrigger.forEach(btn => {  //pentru a lucra cu pseudomasivul modalTrigger\r\n      btn.addEventListener('click', () => openModal(modalSelector, modalTimerId));\r\n  });\r\n\r\n\r\n  modal.addEventListener('click', (e) => {  //evenimentul click pe modal si folosim obiectul evenimentului - \"e\"\r\n      if(e.target === modal || e.target.getAttribute('data-close') == '') {  //daca locul unde tasteaza utilizatorul este egal cu modal, adica nu pe modal-dialog\r\n         closeModal(modalSelector);  //chemam functia closeModal\r\n      }\r\n  });\r\n\r\n  document.addEventListener('keydown', (e) => {  //tastarea de la tastatura\r\n      if(e.code === 'Escape' && modal.classList.contains('show')) {  //daca e(obiectul evenimentului) este egala cu tasta escape(daca noi am tastat esc) si daca fereastra modal este desschisa\r\n          closeModal(modalSelector);  //chemam functia closeModal\r\n      }\r\n  });\r\n\r\n  function showModalByScroll() {  //cream functia ce va arata fereastra modal dupa ce ajungem la sfarsitul paginii\r\n      if(window.pageYOffset + document.documentElement.clientHeight >= document.documentElement.scrollHeight - 1) {  //daca distanța de la partea de sus a viewport-ului până la partea de jos a viewport-ului este egala cu înălțimea totală a întregului document\r\n          openModal(modalSelector, modalTimerId); \r\n          window.removeEventListener('scroll', showModalByScroll);  //dupa ce a fost deschisa prima data fereastra modal, se sterge eventListenerul ce a deschis fereastra\r\n      }\r\n  }\r\n\r\n  window.addEventListener('scroll', showModalByScroll);  //adaugam eveniment odata ce am ajut la sfarsit de pag\r\n\r\n}\r\nexport default modal;\r\nexport {closeModal};\r\nexport{openModal};","    import tabs from './modules/tabs';\r\n    import cards from './modules/cards';\r\n    import forms from './modules/forms';\r\n    import modal from './modules/modal';\r\n    import slider from './modules/slider';\r\n    import calc from './modules/calc';\r\n    import timer from './modules/timer';\r\n    import { openModal } from './modules/modal';\r\n\r\nwindow.addEventListener('DOMContentLoaded', () => {\r\n\r\n    const modalTimerId = setTimeout(() => openModal('.modal', modalTimerId), 300000);  //setam intervalul de timp dupa care sa apara fereastra modal\r\n\r\n    tabs('.tabheader__item', '.tabcontent', '.tabheader__items', 'tabheader__item_active');\r\n    calc();\r\n    cards();\r\n    forms('form', modalTimerId);\r\n    modal('[data-modal]', '.modal', modalTimerId);\r\n    slider({\r\n        container: '.offer__slider',\r\n        nextArrow: '.offer__slider-next',\r\n        prevArrow: '.offer__slider-prev',\r\n        slide: '.offer__slide', \r\n        totalCounter: '#total',\r\n        currentCounter: '#current',\r\n        wrapper: '.offer__slider-wrapper',\r\n        field: '.offer__slider-inner',\r\n    });\r\n    timer('.timer', '2024-09-19');\r\n\r\n}); \r\n","function tabs(tabsSelector, tabsContentSelector,tabsParentSelector, activeClass) {\r\n        // TABS\r\n    \r\n\tlet tabs = document.querySelectorAll(tabsSelector),\r\n    tabsContent = document.querySelectorAll(tabsContentSelector),\r\n    tabsParent = document.querySelector(tabsParentSelector);\r\n\r\n    function hideTabContent() { \r\n    \r\n    tabsContent.forEach(item => {\r\n        item.classList.add('hide');\r\n        item.classList.remove('show', 'fade');\r\n    });\r\n\r\n    tabs.forEach(item => {\r\n        item.classList.remove(activeClass);\r\n    });\r\n    }\r\n\r\n    function showTabContent(i = 0) {  \r\n        tabsContent[i].classList.add('show', 'fade');\r\n        tabsContent[i].classList.remove('hide');\r\n        tabs[i].classList.add(activeClass);\r\n    }\r\n\r\n    hideTabContent();\r\n    showTabContent();\r\n\r\n    tabsParent.addEventListener('click', function(event) { \r\n        const target = event.target;\r\n        if(target && target.classList.contains(tabsSelector.slice(1))) {\r\n            tabs.forEach((item, i) => {\r\n                if (target == item) {\r\n                    hideTabContent();\r\n                    showTabContent(i);\r\n                }\r\n            });\r\n        }\r\n    });\r\n}\r\n\r\nexport default tabs; ","function calc() {\r\n    //Calculator\r\n\r\n    const result = document.querySelector('.calculating__result span');  //primim resultatul final\r\n\r\n    let sex, height, weight, age, ratio;  //cream variabilele de care avem nevoie\r\n\r\n    if(localStorage.getItem('sex')) {  //daca in local storage avem deja setata cheia sex\r\n        sex = localStorage.getItem('sex');  //in document selectam sexul din localStorage\r\n    } else {\r\n        sex = 'female';  //setam sexul manual\r\n        localStorage.setItem('sex', 'female');  //il punem in localStorage\r\n    }\r\n\r\n    \r\n    if(localStorage.getItem('ratio')) {  //cu ratio la fel ca la sex\r\n        ratio = localStorage.getItem('ratio');\r\n    } else {\r\n        ratio = 1.375;\r\n        localStorage.setItem('ratio', 1.375);\r\n    }\r\n\r\n\r\n    function initLocalSettings(selector, activeClass) {  //cream functia care va utiliza datele din local storage\r\n        const elements = document.querySelectorAll(selector);  //primim selectorul indicat ca argument\r\n\r\n        elements.forEach(elem => {\r\n            elem.classList.remove(activeClass);  //remove la clasul activ\r\n            if(elem.getAttribute('id') === localStorage.getItem('sex')) {  //verificam daca avem id si daca e il luam din local storage\r\n                elem.classList.add(activeClass);  //adaugam clasul active\r\n            }\r\n\r\n            if(elem.getAttribute('data-ratio') === localStorage.getItem('ratio')) {  //la ratio la fel\r\n                elem.classList.add(activeClass);\r\n            }\r\n        });\r\n    }\r\n\r\n    initLocalSettings('#gender div', 'calculating__choose-item_active');  //initiem functia initLocalSettings cu argument gender pentru sex siclasul activ\r\n    initLocalSettings('.calculating__choose_big div', 'calculating__choose-item_active');\r\n\r\n\r\n    function calcTotal() {  //cream functia care calculeaza totalul\r\n        if (!sex || !height || !weight || !age || !ratio) {  //daca niciunul din campuri nu vor fi completate \r\n            result.textContent = '___';  //punem **** in locul la resultatul total\r\n            return;  //in cazul in care mai sus avem false, oprim functia\r\n        }\r\n\r\n        if(sex === 'female') {  //daca sex este femeie\r\n            result.textContent = Math.round((447.6 + (9.2 * weight) + (3.1 * height) - (4.3 * age)) * ratio);  //in result calculam dupa formula\r\n        } else {\r\n            result.textContent = Math.round((88.36 + (13.4 * weight) + (4.8 * height) - (5.7 * age)) * ratio);  //in result calculam dupa formula\r\n        }\r\n    }\r\n    \r\n    calcTotal();\r\n\r\n    function getStaticInformation(selector, activeClass) {  //primim informatia si dam ca argument functia de mai jos\r\n        const elements = document.querySelectorAll(selector);  //primim toate div-urile\r\n\r\n        elements.forEach(elem => {\r\n            elem.addEventListener('click', (e) => {  //la argumentul parent selector ii adaugam event click\r\n                if(e.target.getAttribute('data-ratio')) {  //verificam daca obiectul evenimentului are data-ratio\r\n                    ratio = +e.target.getAttribute('data-ratio');  //primim de la e.target si o bagam in ratio \r\n                    localStorage.setItem('ratio', +e.target.getAttribute('data-ratio'));  //memoram in local storage data-ration\r\n                } else {\r\n                    sex = e.target.getAttribute('id');  //primim atributul id \r\n                    localStorage.setItem('sex', e.target.getAttribute('id'));  //memoram in local storage sexul\r\n                }\r\n    \r\n                elements.forEach(elem => {  //cautare forEach\r\n                    elem.classList.remove(activeClass);  //eliminam clasul active\r\n                });\r\n    \r\n                e.target.classList.add(activeClass);  //adaugam active\r\n    \r\n                calcTotal();\r\n            });\r\n        });\r\n    }\r\n\r\n    getStaticInformation('#gender div', 'calculating__choose-item_active');\r\n    getStaticInformation('.calculating__choose_big div', 'calculating__choose-item_active');\r\n\r\n    function getDynamicInformation(selector) {  //cream functia care va primi datele din inpututi\r\n        const input = document.querySelector(selector);  //primim din document elementul dat ca argument in functie\r\n\r\n        input.addEventListener('input', () => {  //adaugam evenimentul input la input\r\n\r\n            if(input.value.match(/\\D/g)) {  //folosind expresii regulate verificam daca inputul contine valori non numerice\r\n                input.style.border = '1px solid red';  //daca contine valori non numerice vom atribui inputului contur rosu\r\n            } else {\r\n                input.style.border = 'none';  //daca nu, nui atribuim contur\r\n            }\r\n\r\n            switch(input.getAttribute('id')) {  //folosim constructia switch,case si verificam dupa id \r\n                case 'height':\r\n                    height = +input.value;  //inscrim in variabila height valoarea inscrisa in inputul cu id height\r\n                    break;\r\n                case 'weight':\r\n                    weight = +input.value;  //inscrim in variabila weight valoarea inscrisa in inputul cu id weight\r\n                    break;\r\n                case 'age':\r\n                    age = +input.value;  //inscrim in variabila age valoarea inscrisa in inputul cu id age\r\n                    break;\r\n            }\r\n            \r\n            calcTotal();\r\n        });\r\n    }\r\n\r\n    getDynamicInformation('#height');\r\n    getDynamicInformation('#weight');\r\n    getDynamicInformation('#age');\r\n}\r\n\r\nexport default calc;","import { getResource } from \"../services/services\";\r\n\r\nfunction cards() {\r\n    \r\n    // Class for Cards\r\n\r\n    class MenuCard {  //cream clasul\r\n        constructor(src, alt, title, descr, price, parentSelector, ...classes) {  //cream constructorul iar ca argumente dam compenentele cardurilor\r\n            this.src = src;  //scriem argumentele ca valori\r\n            this.alt = alt;\r\n            this.title = title;\r\n            this.descr = descr;\r\n            this.price = price;\r\n            this.classes = classes;  //rest operator\r\n            this.parent = document.querySelector(parentSelector);  //DOM element \r\n            this.transfer = 27;  //curs valuta static ca exemplu\r\n            this.changeToUAH();  //aici vom chema metoda changeToUAH\r\n        }\r\n\r\n        changeToUAH() {  //metoda pentru a schimba din dolari in grivne\r\n            this.price = +this.price * this.transfer;  //pentru a afla valoarea in grivne\r\n        }\r\n\r\n        render() {  //cream aspectul siteului (верстка)\r\n            const element = document.createElement('div');  //cream un div nou iar mai jos ii atribuim o structura noua de elemente \r\n\r\n            if (this.classes.length === 0) {  //daca nu a fost dat niciun argument classes\r\n                this.element = 'menu__item'; \r\n                element.classList.add(this.element)  //atunci adaugam valoarea default\r\n            } else {\r\n                this.classes.forEach(className => element.classList.add(className));  //verificam pseudomasivul format si adaugam clasele din pseudomasiv direct pe element\r\n            }\r\n\r\n\r\n            element.innerHTML = `  \r\n                <img src=${this.src} alt=${this.alt}>  \r\n                <h3 class=\"menu__item-subtitle\">${this.title}</h3>\r\n                <div class=\"menu__item-descr\">${this.descr}</div>\r\n                <div class=\"menu__item-divider\"></div>\r\n                <div class=\"menu__item-price\">\r\n                    <div class=\"menu__item-cost\">Цена:</div>\r\n                    <div class=\"menu__item-total\"><span>${this.price}</span> грн/день</div>\r\n                </div>\r\n            `;\r\n            this.parent.append(element);  //punem DOM elementul in noul div \r\n        }\r\n    }\r\n\r\n\r\n    getResource('http://localhost:3000/menu') \r\n        .then(data => {  //datele vin de pe server\r\n            data.forEach(({img, altimg, title, descr, price}) => {\r\n                new MenuCard(img, altimg, title, descr, price, '.menu .container').render();  //acest metod se va repeta de atatea ori cate obiecte vor fi in masiv\r\n            });\r\n        }); \r\n    \r\n    // axios.get('http://localhost:3000/menu') \r\n    //     .then(data => {\r\n    //         data.data.forEach(({img, altimg, title, descr, price}) => {\r\n    //             new MenuCard(img, altimg, title, descr, price, '.menu .container').render();  //acest metod se va repeta de atatea ori cate obiecte vor fi in masiv\r\n    //         });\r\n    //     });\r\n\r\n}\r\n\r\nexport default cards;","const postData = async (url, data) => {  //(async)codul asincron din functie va fi transformat in sincron\r\n    const res = await fetch(url, {  //(avait), se foloseste cu async, js intelege ca codul ce urmeaza va fi sincron\r\n        method: \"POST\",  //Indicam metoda\r\n        headers: {  //Indicam titlurile\r\n            'Content-type': 'application/json'\r\n        },\r\n        body: data\r\n    });  //In res punem promisul ce vine de la fetch\r\n    return await res.json();  //transforma raspunsul in json\r\n};\r\n\r\nasync function getResource(url) {  //(async)codul asincron din functie va fi transformat in sincron\r\n    let res = await fetch(url);  //In res punem promisul ce vine de la fetch\r\n\r\n    if (!res.ok) {  //daca res nu este ok\r\n        throw new Error(`Could not fetch ${url}, status: ${res.status}`);  //Aruncam o noua eroare\r\n    }\r\n\r\n    return await res.json();  //transforma raspunsul in json\r\n};\r\n\r\n\r\nexport {postData};\r\nexport{getResource};\r\n\r\n","import { postData } from \"../services/services\";\r\nimport { closeModal, openModal} from \"./modal\";\r\n\r\nfunction forms(formSelector, modalTimerId) {\r\n    // Forms\r\n    \r\n    const forms = document.querySelectorAll(formSelector);  //In variabila forms primim formele din html\r\n\r\n    const message = {  //Cream un obiect cu raspunsuri diferite in caz de diferite response status\r\n        loading: 'img/form/spinner.svg',\r\n        success: 'Multumim! Va contactam in curand',\r\n        failure: 'Ceva nu merge bine...'\r\n    };\r\n\r\n    forms.forEach(item => {  //Legam de fiecare forma functia postData\r\n        bindOostData(item);\r\n    });\r\n\r\n\r\n\r\n    function bindOostData(form) {  //Cream functia ce raspunde pentru postarea datelor, va primi in sine o forma  \r\n        form.addEventListener('submit', (e) => {  //De fiecare data cand trimitem ceva date in forma  (e este obiectul evemnimentului)\r\n            e.preventDefault();  //Pentru a anula comportamentul standart al browserului\r\n\r\n            const statusMessage = document.createElement('img');  //Vom crea elementul img statusMessage\r\n            statusMessage.src = message.loading;  //Ii adaugam atributul src \r\n            statusMessage.style.cssText = `\r\n                display: block;\r\n                margin: 0 auto;\r\n            `;  //Am adaugat stiluri la status message\r\n            form.insertAdjacentElement('afterend', statusMessage); //folosim o comanda care va pune dupa forma status message\r\n\r\n            const formData = new FormData(form);  //Cream obiectul formData care si transmitem ca argument forma care se transmite ca argument in postData\r\n\r\n            const json = JSON.stringify(Object.fromEntries(formData.entries()));  //transformă obiectul formData într-un șir JSON pentru a-l putea utiliza ulterior pentru a trimite date către server sau pentru a fi stocat în altă parte sub formă de date JSON.\r\n\r\n\r\n            postData('http://localhost:3000/requests', json)\r\n            .then(data => {  //Folosim promisurile\r\n                console.log(data); //Aratam la consola ceea ce ne returneaza serverul\r\n                showThanksModal(message.success);  //chemam functia ShowThanksModal si trimitem mesajul success in forma\r\n                statusMessage.remove();  //eliminam blocul status message de pe pagina\r\n            }).catch(() => {\r\n                showThanksModal(message.failure);  //daca ceva nu a mers bine transmitem failure prin functia showThanksModal\r\n            }).finally(() => {\r\n                form.reset();\r\n            });\r\n        });\r\n    }\r\n\r\n    function showThanksModal(message) {  //Cream functia ce va raspunde de aratarea unu mesaj de multumire\r\n        const prevModalDialog = document.querySelector('.modal__dialog');  //Primim clasul modal__dialog\r\n\r\n        prevModalDialog.classList.add('hide');  //Ii adaugam clasul hide care il va ascunde de pe pag\r\n        openModal('.modal', modalTimerId);  //Cand se ascunde prevModalDialog se porneste functia openModal\r\n\r\n        const thanksModal = document.createElement('div');  //Cream un element div si il punem in variabila thanksModal\r\n        thanksModal.classList.add('modal__dialog');  //Ii adaugam clasul modal__dialog\r\n        thanksModal.innerHTML = `  \r\n            <div class=\"modal__content\">\r\n                <div class=\"modal__close\" data-close>×</div>\r\n                <div class=\"modal__title\">${message}</div>\r\n            </div>\r\n        `;  //Adaugam content in blocul pe care l-am creat\r\n        \r\n        document.querySelector('.modal').append(thanksModal);  //Primim fereastra modal si folosim append care adauga textul \r\n        setTimeout(() => {  //Cream un setTimeout care va functiona dupa 4 sec\r\n            thanksModal.remove();  //ascundem thanksModal pentru a intoarce inapoi prevModalDialog\r\n            prevModalDialog.classList.add('show');  //aratam\r\n            prevModalDialog.classList.remove('hide');  //ascundem\r\n            closeModal('.modal');  //inchidem fereastra modal\r\n        }, 4000);\r\n    }\r\n}\r\n\r\nexport default forms;","function slider({container, slide, nextArrow, prevArrow, totalCounter, currentCounter, wrapper, field}) {\r\n        //Slider\r\n\r\n        const slides = document.querySelectorAll(slide),  //primim sliderurile\r\n        slider = document.querySelector(container),\r\n        prev = document.querySelector(prevArrow),  //primim arrow prev apoi next\r\n        next = document.querySelector(nextArrow),\r\n        total = document.querySelector(totalCounter),\r\n        current = document.querySelector(currentCounter),\r\n        slidesWrapper = document.querySelector(wrapper),\r\n        slidesField = document.querySelector(field),\r\n        width = window.getComputedStyle(slidesWrapper).width;  //returnează valoarea calculată pentru proprietatea width a elementului slidesWrapper\r\n  \r\n  let slideIndex = 1;  //index ce va arata pozitia actuala a sliderului\r\n  let offset = 0;  //orientir sa vedem cu cat sa mutam cu ajutorul transform\r\n\r\n  \r\n  if(slides.length < 10) {  //daca avem mai putin de 10 slideuri adaugam un 0 in fata\r\n      total.textContent = `0${slides.length}`;\r\n      current.textContent = `0${slideIndex}`;\r\n  } else {\r\n      total.textContent = slides.length;  //daca nu, adaugam numarul actual al sliderului\r\n      current.textContent = slideIndex;\r\n  }\r\n\r\n  slidesField.style.width = 100 * slides.length + '%';  //setam latimea blocului\r\n  slidesField.style.display = 'flex';\r\n  slidesField.style.transition = '0.5s all';\r\n\r\n  slidesWrapper.style.overflow = 'hidden';  //ascundem toate elementele ce nu apar in zona de vizibilitate\r\n\r\n  slides.forEach(slide => {\r\n      slide.style.width = width;  //cu forEach trecem prin toate sliderurile si le setam aceeasi latime la toate\r\n  });\r\n\r\n  slider.style.position = 'relative';  //ii dam pozitie relativa la slider\r\n\r\n  const indicators = document.createElement('ol'),  //cream un element nou ol list\r\n        dots = [];  //cream array \r\n  indicators.classList.add('corousel-indicators');  //ii dam un clas nou \r\n  indicators.style.cssText = `\r\n      position: absolute;\r\n      right: 0;\r\n      bottom: 0;\r\n      left: 0;\r\n      z-index: 15;\r\n      display: flex;\r\n      justify-content: center;\r\n      margin-right: 15%;\r\n      margin-left: 15%;\r\n      list-style: none;\r\n  `;  //ii adaugam stilurile prin interpolare la bloc\r\n  slider.append(indicators);  //postam elementul in slider\r\n\r\n  for(let i = 0; i < slides.length; i++) {  //printr-un for cream punctele care vor fi dupa numarul de slideuri\r\n      const dot = document.createElement('li');  //cream anume elemente li\r\n      dot.setAttribute('data-slide-to', i + 1);  //fiecarui punct ii atribuim data-slide-to si adaugam numerarea\r\n      dot.style = `\r\n          box-sizing: content-box;\r\n          flex: 0 1 auto;\r\n          width: 30px;\r\n          height: 6px;\r\n          margin-right: 3px;\r\n          margin-left: 3px;\r\n          cursor: pointer;\r\n          background-color: #fff;\r\n          background-clip: padding-box;\r\n          border-top: 10px solid transparent;\r\n          border-bottom: 10px solid transparent;\r\n          opacity: .5;\r\n          transition: opacity .6s ease;\r\n      `;\r\n      if(i == 0) {\r\n          dot.style.opacity = 1;  //modificam opacity la punctul activ\r\n      }\r\n      indicators.append(dot);  //postam punctele in indicators\r\n      dots.push(dot);  //cand se creaza punctele le bagam in arr\r\n  };\r\n\r\n  function deleteNotDigits(str) {\r\n      return+str.replace(/\\D/g, '');\r\n  }\r\n\r\n  next.addEventListener('click', () => {\r\n      if(offset == deleteNotDigits(width) * (slides.length - 1)) {  //intai avem un string, apoi il convertim in number si ii taiem px\r\n          offset = 0;\r\n      } else {\r\n          offset += deleteNotDigits(width);  //\r\n      }\r\n\r\n      slidesField.style.transform = `translateX(-${offset}px)`;  //mutam pe x slideul cat ne spune offsetul\r\n\r\n      if(slideIndex == slides.length) {\r\n          slideIndex = 1;\r\n      } else {\r\n          slideIndex++;\r\n      }\r\n\r\n      if(slides.length < 10) {\r\n          current.textContent = `0${slideIndex}`;\r\n      } else { \r\n          current.textContent = slideIndex;\r\n      }\r\n\r\n      dots.forEach(dot => dot.style.opacity = '.5');  //initial fiecarui punct ii dam inline style opacity 0.5\r\n      dots[slideIndex - 1].style.opacity = 1;  //scadem indexul la dots si ii dam opacity la 1 \r\n  });\r\n\r\n  prev.addEventListener('click', () => {\r\n      if(offset == 0) {  //intai avem un string, apoi il convertim in number si ii taiem px\r\n          offset = deleteNotDigits(width) * (slides.length - 1) //intai avem un string, apoi il convertim in number si ii taiem px\r\n      } else {\r\n          offset -= deleteNotDigits(width);  //\r\n      }\r\n\r\n      slidesField.style.transform = `translateX(-${offset}px)`;  //mutam pe x slideul cat ne spune offsetul\r\n\r\n      if(slideIndex == 1) {\r\n          slideIndex = slides.length;\r\n      } else {\r\n          slideIndex--;\r\n      }\r\n\r\n      if(slides.length < 10) {\r\n          current.textContent = `0${slideIndex}`;\r\n      } else { \r\n          current.textContent = slideIndex;\r\n      }\r\n\r\n      dots.forEach(dot => dot.style.opacity = '.5');  //initial fiecarui punct ii dam inline style opacity 0.5\r\n      dots[slideIndex - 1].style.opacity = 1;  //scadem indexul la dots si ii dam opacity la 1 \r\n  });\r\n\r\n  dots.forEach(dot => {\r\n      dot.addEventListener('click', (e) => {  //adaugam evenimentul click la puncte si folosim obiectul evenimentului\r\n          const slideTo = e.target.getAttribute('data-slide-to');  //primim valoarea obiectului e dupa click\r\n\r\n          slideIndex = slideTo;  //cand tastam un punct schimbam indexul la slideIndex\r\n          offset = deleteNotDigits(width) * (slideTo - 1);  //calculam offsetul\r\n\r\n          slidesField.style.transform = `translateX(-${offset}px)`;  //mutam pe x slideul cat ne spune offsetul\r\n          dots.forEach(dot => dot.style.opacity = '.5');  //initial fiecarui punct ii dam inline style opacity 0.5\r\n          dots[slideIndex - 1].style.opacity = 1;  //scadem indexul la dots si ii dam opacity la 1 \r\n\r\n          if(slides.length < 10) {\r\n              current.textContent = `0${slideIndex}`;\r\n          } else { \r\n              current.textContent = slideIndex;\r\n          }\r\n      });\r\n  });\r\n}\r\n\r\nexport default slider;","function timer(id, deadline) {\r\n    // TIMER\r\n\r\n    function getTimeRemaining(endtime) {\r\n        let days, hours, minutes, seconds;\r\n        const t = Date.parse(endtime) - Date.parse(new Date());\r\n\r\n        if(t <= 0) {\r\n            days = 0;\r\n            hours = 0;\r\n            minutes = 0;\r\n            seconds = 0;\r\n        } else {\r\n              days = Math.floor(t / (1000 * 60 * 60 * 24)),\r\n              hours = Math.floor((t / (1000 * 60 * 60)) % 24),\r\n              minutes = Math.floor((t / 1000 / 60) % 60),\r\n              seconds = Math.floor((t / 1000) % 60);\r\n        }\r\n        \r\n        return {\r\n            'total': t,\r\n            'days': days,\r\n            'hours': hours,\r\n            'minutes': minutes,\r\n            'seconds': seconds\r\n        };\r\n    };\r\n\r\n    function getZero(num) {\r\n        if(num >= 0 && num < 10){\r\n            return `0${num}`;\r\n        } else {\r\n            return num;\r\n        }\r\n    }\r\n\r\n    function setClock(selector, endtime) {\r\n        const timer = document.querySelector(selector),\r\n              days = timer.querySelector('#days'),\r\n              hours = timer.querySelector('#hours'),\r\n              minutes = timer.querySelector('#minutes'),\r\n              seconds = timer.querySelector('#seconds'),\r\n              timeInterval = setInterval(updateClock, 1000);\r\n\r\n        updateClock();\r\n        \r\n        function updateClock() {\r\n            const t = getTimeRemaining(endtime);\r\n\r\n            days.innerHTML = getZero(t.days),\r\n            hours.innerHTML = getZero(t.hours);\r\n            minutes.innerHTML = getZero(t.minutes);\r\n            seconds.innerHTML = getZero(t.seconds);\r\n\r\n            if(t.total <= 0) {\r\n                clearInterval(timeInterval);\r\n            }\r\n        }\r\n    };\r\n\r\n    setClock(id, deadline);\r\n}\r\n\r\nexport default timer;"],"names":["openModal","modalSelector","modalTimerId","modal","document","querySelector","classList","add","remove","body","style","overflow","console","log","clearInterval","closeModal","window","addEventListener","setTimeout","tabsSelector","tabsContentSelector","tabsParentSelector","activeClass","tabs","querySelectorAll","tabsContent","tabsParent","hideTabContent","forEach","item","showTabContent","i","event","target","contains","slice","result","sex","height","weight","age","ratio","initLocalSettings","selector","elem","getAttribute","localStorage","getItem","calcTotal","textContent","Math","round","getStaticInformation","elements","e","setItem","getDynamicInformation","input","value","match","border","calc","MenuCard","constructor","src","alt","title","descr","price","parentSelector","classes","this","parent","transfer","changeToUAH","render","element","createElement","length","className","innerHTML","append","async","url","res","fetch","ok","Error","status","json","getResource","then","data","img","altimg","cards","formSelector","showThanksModal","message","prevModalDialog","thanksModal","form","preventDefault","statusMessage","cssText","insertAdjacentElement","formData","FormData","method","headers","postData","JSON","stringify","Object","fromEntries","entries","catch","finally","reset","forms","triggerSelector","modalTrigger","btn","code","showModalByScroll","pageYOffset","documentElement","clientHeight","scrollHeight","removeEventListener","container","slide","nextArrow","prevArrow","totalCounter","currentCounter","wrapper","field","slides","slider","prev","next","total","current","slidesWrapper","slidesField","width","getComputedStyle","slideIndex","offset","display","transition","position","indicators","dots","dot","setAttribute","opacity","push","deleteNotDigits","str","replace","transform","slideTo","id","deadline","getZero","num","endtime","timer","days","hours","minutes","seconds","timeInterval","setInterval","updateClock","t","Date","parse","floor","getTimeRemaining","setClock"],"sourceRoot":""}